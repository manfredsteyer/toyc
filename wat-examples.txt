
/*
(module

(func $add (local $a i32) (local $b i32)
i32.const 1
i32.const 1
 i32.add
 set_local $a
)

(export "add" (func $add))


)
*/

/*
 (if 
      (then (
        i32.const 20
        set_local $a	
        )
      )
      (else (
        i32.const 20
        set_local $a
      ))
    )


(module
  (func $add (param $lhs i32) (param $rhs i32) (result i32) (local $r i32)
    
    i32.const 100
    set_local $r

    (block
    (loop
    
      get_local $lhs
      get_local $rhs
      i32.lt_s
      i32.eqz

      br_if 1

      get_local $r
      i32.const 10
      i32.add
      set_local $r

      get_local $lhs
      i32.const 1
      i32.add
      set_local $lhs

      br 0
    ))
    

    get_local $r
    
    )
  (export "add" (func $add))
)
*/





(module
  (import "console" "log" (func $log (param i32)))
  (func $add (param $lhs i32) (param $rhs i32) (result i32) (local $r i32)
    
    i32.const 100
    set_local $r

    (block
    (loop
    
      get_local $lhs
      get_local $rhs
      i32.lt_s
      i32.eqz

      br_if 1

      get_local $r
      i32.const 10
      i32.add
      set_local $r

      get_local $lhs
      call $log

      get_local $lhs
      i32.const 1
      i32.add
      set_local $lhs

      br 0
    ))
    

    get_local $r
    
    )
  (export "add" (func $add))
)


var importObject = {
  console: {
    log: function(arg) {
      console.log(arg);
    }
  }
};

fetch('../out/main.wasm').then(response =>
  response.arrayBuffer()
).then(bytes => WebAssembly.instantiate(bytes, importObject)).then(results => {
  instance = results.instance;
  document.getElementById("container").textContent = instance.exports.myProgram(0,10);
}).catch(console.error);

